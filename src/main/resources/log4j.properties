# 该配置在tomcat的logs文件夹下每天产生新的日志文件（DEBUG级别：log.log）（ERROR级别：error.log）
# 然后将前一天的日志文件log.log和error.log的名称修改为：
# 		log.log_yyyy-MM-dd.log和error.log_yyyy-MM-dd.log（yyyy-MM-dd替换为该文件最后修改的日期）


#配置根Logger

log4j.rootLogger = debug,Log,Err
#log4j.logger.org.springframework2 = debug,stdout

### 1. 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =  [%p] [%d{yyyy-MM-dd HH:mm:ss}] %l : %m%n


### 2. 输出到Debug日志文件 ###
log4j.appender.Log = org.apache.log4j.DailyRollingFileAppender
###设置DatePattern，当天日志保存到log.log文件，前一天的日志文件名将被修改为
#log.log + _yyyy-MM-dd.log
log4j.appender.Log.File =d:/logs/log/log.log
log4j.appender.Log.DatePattern = '_'yyyy_MM_dd'.log'
log4j.appender.Log.Append = true
## 输出DEBUG级别以上的日志
log4j.appender.Log.Threshold = DEBUG
log4j.appender.Log.layout = org.apache.log4j.PatternLayout
log4j.appender.Log.layout.ConversionPattern = [%p] [%d{yyyy-MM-dd HH:mm:ss}] %l : %m%n


### 3. 输出到Error日志文件 ###
log4j.appender.Err = org.apache.log4j.DailyRollingFileAppender
###设置DatePattern，当天日志保存到error.log文件，前一天的日志文件名将被修改为
#error.log + _yyyy-MM-dd.log
log4j.appender.Err.File =d:/logs/err/err.log
log4j.appender.Err.DatePattern = '_'yyyy_MM_dd'.log'
log4j.appender.Err.Append = true
## 只输出ERROR级别以上的日志!!!
log4j.appender.Err.Threshold = ERROR
log4j.appender.Err.layout = org.apache.log4j.PatternLayout
log4j.appender.Err.layout.ConversionPattern = [%p] [%d{yyyy-MM-dd HH:mm:ss}] %l : %m%n



# 在DailyRollingFileAppender中可以指定人内容如下：
# monthly(每月)、 weekly(每周)、daily(每天)、half-daily(每半天)、hourly(每小时)和minutely(每分钟)六个频度，
# 这是通过为 DatePattern选项赋予不同的值来完成的。DatePattern选项的有效值为：
#		'.'yyyy-MM,对应monthly(每月)
#		'.'yyyy-ww,对应weekly(每周)
#		'.'yyyy-MM-dd,对应daily(每天)
#		'.'yyyy-MM-dd-a,对应half-daily(每半天)
#		'.'yyyy-MM-dd-HH,对应hourly(每小时)
#		'.'yyyy-MM-dd-HH-mm,对应minutely(每分钟)
#	DatePattern中不用处理的文字要放到单引号(')中，如上面的(.)。

